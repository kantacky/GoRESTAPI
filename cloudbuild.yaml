steps:
  - name: gcr.io/cloud-builders/docker
    entrypoint: "bash"
    args:
      - -c
      - >-
        docker build
        --no-cache
        --tag=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
        --file=Dockerfile
        --build-arg=ARG_DB_HOST=$$DB_HOST
        --build-arg=ARG_DB_PORT=$$DB_PORT
        --build-arg=ARG_DB_USER=$$DB_USER
        --build-arg=ARG_DB_PASS=$$DB_PASS
        .
    secretEnv: ["DB_HOST", "DB_PORT", "DB_USER", "DB_PASS"]
    id: Build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
    id: Push
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - --platform=managed
      - --image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - --region=$_DEPLOY_REGION
      - --quiet
    id: Deploy
    entrypoint: gcloud
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/API_DB_HOST/versions/latest
      env: DB_HOST
    - versionName: projects/$PROJECT_ID/secrets/API_DB_PORT/versions/latest
      env: DB_PORT
    - versionName: projects/$PROJECT_ID/secrets/API_DB_USER/versions/latest
      env: DB_USER
    - versionName: projects/$PROJECT_ID/secrets/API_DB_PASS/versions/latest
      env: DB_PASS
images:
  - $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
